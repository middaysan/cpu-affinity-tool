name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger on tags that start with 'v', e.g., v1.0.0

permissions:
  contents: write

jobs:
  check:
    name: Check and Build
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~\.cargo\registry
            ~\.cargo\git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  build-windows:
    name: Build Windows Binary
    needs: check
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: x86_64-pc-windows-msvc

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~\.cargo\registry
            ~\.cargo\git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Windows binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin cpu-affinity-tool

      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: windows-binary
          path: target/release/cpu-affinity-tool.exe
          if-no-files-found: error

# Linux build temporarily disabled - will be implemented later
#  build-linux:
#    name: Build Linux Binary
#    needs: check
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Setup Rust
#        uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: stable
#          override: true
#          target: x86_64-unknown-linux-gnu
#
#      - name: Install dependencies
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libspeechd-dev libxkbcommon-dev libssl-dev
#
#      - name: Cache dependencies
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#            target
#          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#
#      - name: Build Linux binary
#        uses: actions-rs/cargo@v1
#        with:
#          command: build
#          args: --release --bin cpu-affinity-tool-linux --features linux
#
#      - name: Upload Linux binary
#        uses: actions/upload-artifact@v3
#        with:
#          name: linux-binary
#          path: target/release/cpu-affinity-tool-linux
#          if-no-files-found: error

  create-release:
    name: Create Release
    needs: [build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows binary
        uses: actions/download-artifact@v4
        with:
          name: windows-binary
          path: ./artifacts/windows

# Linux binary download temporarily disabled
#      - name: Download Linux binary
#        uses: actions/download-artifact@v3
#        with:
#          name: linux-binary
#          path: ./artifacts/linux

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: CPU Affinity Tool v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            ./artifacts/windows/cpu-affinity-tool.exe
            # Linux binary temporarily disabled
            # ./artifacts/linux/cpu-affinity-tool-linux